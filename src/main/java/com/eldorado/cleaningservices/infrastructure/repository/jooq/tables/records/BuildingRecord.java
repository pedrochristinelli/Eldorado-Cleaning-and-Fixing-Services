/*
 * This file is generated by jOOQ.
 */
package com.eldorado.cleaningservices.infrastructure.repository.jooq.tables.records;


import com.eldorado.cleaningservices.infrastructure.repository.jooq.tables.Building;

import java.time.LocalDate;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BuildingRecord extends UpdatableRecordImpl<BuildingRecord> implements Record5<Integer, String, String, String, LocalDate> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>BUILDING.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>BUILDING.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>BUILDING.zipcode</code>.
     */
    public void setZipcode(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>BUILDING.zipcode</code>.
     */
    public String getZipcode() {
        return (String) get(1);
    }

    /**
     * Setter for <code>BUILDING.latitude</code>.
     */
    public void setLatitude(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>BUILDING.latitude</code>.
     */
    public String getLatitude() {
        return (String) get(2);
    }

    /**
     * Setter for <code>BUILDING.longitude</code>.
     */
    public void setLongitude(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>BUILDING.longitude</code>.
     */
    public String getLongitude() {
        return (String) get(3);
    }

    /**
     * Setter for <code>BUILDING.created_date</code>.
     */
    public void setCreatedDate(LocalDate value) {
        set(4, value);
    }

    /**
     * Getter for <code>BUILDING.created_date</code>.
     */
    public LocalDate getCreatedDate() {
        return (LocalDate) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<Integer, String, String, String, LocalDate> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Integer, String, String, String, LocalDate> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Building.BUILDING.ID;
    }

    @Override
    public Field<String> field2() {
        return Building.BUILDING.ZIPCODE;
    }

    @Override
    public Field<String> field3() {
        return Building.BUILDING.LATITUDE;
    }

    @Override
    public Field<String> field4() {
        return Building.BUILDING.LONGITUDE;
    }

    @Override
    public Field<LocalDate> field5() {
        return Building.BUILDING.CREATED_DATE;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getZipcode();
    }

    @Override
    public String component3() {
        return getLatitude();
    }

    @Override
    public String component4() {
        return getLongitude();
    }

    @Override
    public LocalDate component5() {
        return getCreatedDate();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getZipcode();
    }

    @Override
    public String value3() {
        return getLatitude();
    }

    @Override
    public String value4() {
        return getLongitude();
    }

    @Override
    public LocalDate value5() {
        return getCreatedDate();
    }

    @Override
    public BuildingRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public BuildingRecord value2(String value) {
        setZipcode(value);
        return this;
    }

    @Override
    public BuildingRecord value3(String value) {
        setLatitude(value);
        return this;
    }

    @Override
    public BuildingRecord value4(String value) {
        setLongitude(value);
        return this;
    }

    @Override
    public BuildingRecord value5(LocalDate value) {
        setCreatedDate(value);
        return this;
    }

    @Override
    public BuildingRecord values(Integer value1, String value2, String value3, String value4, LocalDate value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached BuildingRecord
     */
    public BuildingRecord() {
        super(Building.BUILDING);
    }

    /**
     * Create a detached, initialised BuildingRecord
     */
    public BuildingRecord(Integer id, String zipcode, String latitude, String longitude, LocalDate createdDate) {
        super(Building.BUILDING);

        setId(id);
        setZipcode(zipcode);
        setLatitude(latitude);
        setLongitude(longitude);
        setCreatedDate(createdDate);
    }
}
