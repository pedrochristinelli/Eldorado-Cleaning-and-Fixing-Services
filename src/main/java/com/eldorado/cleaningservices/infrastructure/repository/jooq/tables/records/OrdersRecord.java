/*
 * This file is generated by jOOQ.
 */
package com.eldorado.cleaningservices.infrastructure.repository.jooq.tables.records;


import com.eldorado.cleaningservices.infrastructure.repository.jooq.tables.Orders;

import java.time.LocalDate;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OrdersRecord extends UpdatableRecordImpl<OrdersRecord> implements Record4<Integer, String, LocalDate, Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>ORDERS.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>ORDERS.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>ORDERS.customer_info</code>.
     */
    public void setCustomerInfo(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>ORDERS.customer_info</code>.
     */
    public String getCustomerInfo() {
        return (String) get(1);
    }

    /**
     * Setter for <code>ORDERS.purchase_date</code>.
     */
    public void setPurchaseDate(LocalDate value) {
        set(2, value);
    }

    /**
     * Getter for <code>ORDERS.purchase_date</code>.
     */
    public LocalDate getPurchaseDate() {
        return (LocalDate) get(2);
    }

    /**
     * Setter for <code>ORDERS.service_pack_id</code>.
     */
    public void setServicePackId(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>ORDERS.service_pack_id</code>.
     */
    public Integer getServicePackId() {
        return (Integer) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Integer, String, LocalDate, Integer> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Integer, String, LocalDate, Integer> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Orders.ORDERS.ID;
    }

    @Override
    public Field<String> field2() {
        return Orders.ORDERS.CUSTOMER_INFO;
    }

    @Override
    public Field<LocalDate> field3() {
        return Orders.ORDERS.PURCHASE_DATE;
    }

    @Override
    public Field<Integer> field4() {
        return Orders.ORDERS.SERVICE_PACK_ID;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getCustomerInfo();
    }

    @Override
    public LocalDate component3() {
        return getPurchaseDate();
    }

    @Override
    public Integer component4() {
        return getServicePackId();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getCustomerInfo();
    }

    @Override
    public LocalDate value3() {
        return getPurchaseDate();
    }

    @Override
    public Integer value4() {
        return getServicePackId();
    }

    @Override
    public OrdersRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public OrdersRecord value2(String value) {
        setCustomerInfo(value);
        return this;
    }

    @Override
    public OrdersRecord value3(LocalDate value) {
        setPurchaseDate(value);
        return this;
    }

    @Override
    public OrdersRecord value4(Integer value) {
        setServicePackId(value);
        return this;
    }

    @Override
    public OrdersRecord values(Integer value1, String value2, LocalDate value3, Integer value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached OrdersRecord
     */
    public OrdersRecord() {
        super(Orders.ORDERS);
    }

    /**
     * Create a detached, initialised OrdersRecord
     */
    public OrdersRecord(Integer id, String customerInfo, LocalDate purchaseDate, Integer servicePackId) {
        super(Orders.ORDERS);

        setId(id);
        setCustomerInfo(customerInfo);
        setPurchaseDate(purchaseDate);
        setServicePackId(servicePackId);
    }
}
